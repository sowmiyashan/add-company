{"version":3,"sources":["logo.svg","components/Header.js","shared/locations.js","shared/company.js","components/Logo/center.js","components/Logo/plus-alt2.svg","components/Logo/Logo.js","shared/tags.js","components/AddCompany.js","components/Company.js","components/CompanyHeader.js","components/CompanyProfile.js","shared/jobs.js","components/Jobs.js","components/Students.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["navigation","name","href","current","classNames","classes","filter","Boolean","join","Header","as","className","open","Button","src","alt","map","item","to","undefined","Panel","LOCATIONS","id","location","COMPANY","FormItem","styled","div","ImageContainerMain","ImageUploadContainer","ImageUploadHidden","input","ImageIconContainer","ImageIconSecondary","ImageIcon","img","ImageControlsContainer","ImageControlButtonsContainer","p","ImageControlButtonText","span","ImageControlButton","label","props","button","Step2","useState","file","state","fileData","setFileData","useEffect","hiddenFileInput","useRef","style","height","width","URL","createObjectURL","plus","marginTop","onBlur","ref","type","onChange","event","target","files","parentCallback","accept","onClick","click","TAGS","tag","AddCompany","locCount","tempLocations","setTempLoc","locSuggestions","setSuggestions","locText","setLocText","tagCount","tempTags","setTempTags","tagSuggestions","setTagSuggestions","tagText","setTagText","compName","setCompName","tagline","setTagline","logo","setLogo","setlocation","tags","setTags","assignments","setAssign","openings","setOpenings","website","setWebsite","about","setAbout","onInputChange","e","console","log","value","locAddClass","push","x","tagAddClass","onSubmit","values","obj","length","history","preventDefault","addCompany","htmlFor","autoComplete","logoData","suggestions","fl","tl","newObjCount","regex","RegExp","sort","v","test","i","elements","document","getElementsByClassName","Items","static","Item","active","floc","loc","tloc","arr","getElementById","locSuggestionSelected","fTag","tTag","valueArr","split","string","s","trim","tagSuggestionSelected","placeholder","rows","defaultValue","Company","class","comp","CompanyHeader","company","ele","compTagline","splice","JOBS","Jobs","job","jobs","setJobs","Count","title","setTitle","setType","desc","setDesc","resp","setResp","AddClass","closeModal","display","window","onclick","modal","people","email","college","department","sem","Students","openModal","scope","person","frameborder","Main","exact","path","component","match","params","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03efa373.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\n\nconst navigation = [\n  { name: 'Home', href: '', current: false },\n  { name: 'Companies', href: 'companies', current: false },\n  { name: 'Verifications', href: 'verifications', current: false },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Header() {\n  return (\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                  <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <Link to={`/${item.href}`}>\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(\n                            item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                            'px-3 py-2 rounded-md text-sm font-medium'\n                          )}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      </Link>\n                      \n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <button className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                \n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </a>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}","export const LOCATIONS = [\n    {\n        id:0,\n        location:'Singapore, SG'\n    },\n    {\n        id:1,\n        location:'Hong Kong, HK'\n    },\n    {\n        id:2,\n        location:'San Francisco, California, USA'\n    },\n    {\n        id:3,\n        location:'Bangalore, Karnataka, India'\n    },\n    {\n        id:4,\n        location:'Gurugram, Haryana, India'\n    }\n]","export const COMPANY = [\n    \n];","import styled from 'styled-components/macro';\n\n// ---------------  Image Upload  ---------------\n\nexport const FormItem = styled.div`\n  margin-bottom: 1.75rem;\n`;\nexport const ImageContainerMain = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  margin-bottom: -1.5rem;\n`;\n\nexport const ImageUploadContainer = styled.div`\n  width: 112px;\n  height: 112px;\n  margin-right: 1.5rem;\n\n  background-color: #f5f7fa;\n  border: 1px dashed #dadce1;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.25s ease;\n  position: relative;\n  &:hover {\n    background: #eef2f7;\n  }\n`;\n\nexport const ImageUploadHidden = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #fff;\n  opacity: 0;\n  padding: 0;\n  width: 100%;\n  z-index: 10;\n  cursor: pointer;\n  &::file-selector-button {\n    cursor: pointer;\n  }\n`;\nexport const ImageIconContainer = styled.div`\n  text-align: center;\n  cursor: pointer;\n`;\nexport const ImageIconSecondary = styled.div`\n  font-size: 1.2rem;\n  color: #949bac;\n  cursor: pointer;\n`;\nexport const ImageIcon = styled.img`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n  font-size: 1.2rem;\n  color: #949bac;\n  cursor: pointer;\n  filter: invert(64%) sepia(25%) saturate(183%) hue-rotate(184deg)\n    brightness(94%) contrast(84%);\n`;\n\nexport const ImageControlsContainer = styled.div`\n/* display: -webkit-box; */\n/* display: -webkit-flex; */\ndisplay: -ms-flexbox;\ndisplay: flex;\n/* -webkit-flex-direction: column; */\n-ms-flex-direction: column;\n/* flex-direction: column; */\n/* -webkit-box-pack: justify; */\n/* -webkit-justify-content: space-between; */\n-ms-flex-pack: justify;\njustify-content: space-between;\n/* -webkit-align-items: flex-end; */\n-webkit-box-align: flex-end;\n-ms-flex-align: flex-end;\nalign-items: flex-end;\n`;\nexport const ImageControlDetailsContainer = styled.div``;\nexport const ImageControlTitle = styled.div``;\nexport const ImageControlDescription = styled.p`\n  padding-top: 4px;\n  font-size: 0.875rem;\n  color: #51596c;\n  max-width: 320px;\n  margin: 0;\n`;\n\nexport const ImageControlButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ImageControlButtonText = styled.span``;\n\nexport const ImageControlButton = styled.label`\n  height: 2.2rem;\n  font-size: 0.875rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-weight: 500;\n  background-color: rgba(79, 70, 229, var(--tw-bg-opacity));\n  border: 1px solid #ced0d5;\n  border-width: 1px;\n  border-radius: 0.375rem;\n  color: #1f2430;\n  cursor: pointer;\n  margin: 0 1rem 0 0;\n  display: inline-flex !important;\n  align-items: center !important;\n  justify-content: space-between !important;\n  background-color: ${(props) =>\n    props.button === 'next' ? '#4440db' : 'white'};\n  text-align: center;\n  vertical-align: middle;\n  display: flex;\n\n  &:hover {\n    border: 1px solid #b8bbc2;\n    background-color: ${(props) =>\n      props.button === 'next' ? '#4440db' : 'white'};\n    color: ${(props) => (props.button === 'next' ? 'white' : '#4440db')};\n  }\n`;\n\nexport const ImageControlButtonIcon = styled.img`\n  display: inline-block;\n  width: 1.9rem;\n  height: 1.9rem;\n  stroke-width: 0;\n  padding-right: 0.625rem !important;\n  stroke: currentColor;\n  fill: currentColor;\n  font-size: 1.2rem;\n  cursor: pointer;\n  filter: invert(25%) sepia(83%) saturate(5900%) hue-rotate(242deg)\n    brightness(91%) contrast(91%);\n`;","export default __webpack_public_path__ + \"static/media/plus-alt2.697d11bf.svg\";","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport {\n  ImageControlsContainer,\n  FormItem,\n  ImageContainerMain,\n  ImageUploadContainer,\n  ImageUploadHidden,\n  ImageIconContainer,\n  ImageIconSecondary,\n  ImageIcon,\n  ImageControlButtonsContainer,\n  ImageControlButton,\n  ImageControlButtonText,\n} from './center';\n\nimport plus from './plus-alt2.svg';\n\nexport default function Step2(props) {\n  const [fileData, setFileData] = useState({\n    file: undefined,\n    state: false,\n  });\n\n  useEffect(() => {\n    if(props.file!=null){\n      setFileData({ state: true, file: props.file });\n    }\n    if (!fileData.file && fileData.state === true) {\n      setFileData({ state: false, file: undefined });\n    }\n  }, [fileData]);\n  const hiddenFileInput = useRef(null);\n\n  const handleImageClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n  const handleImageChange = (event) => {\n    setFileData({ state: true, file: event.target.files[0] });\n    props.parentCallback({ state: true, file: event.target.files[0] })\n  };\n  const removeImage = (event) => {\n    setFileData({ state: false, file: {} });\n  };\n\n  return (\n    <FormItem>\n      <ImageContainerMain>\n        <ImageUploadContainer>\n          <ImageIconContainer>\n            <ImageIconSecondary>\n              {fileData.state ? (\n                <img\n                  style={{ height: '100px', width: '100px' }}\n                  src={URL.createObjectURL(fileData.file)}\n                  alt='none'\n                />\n              ) : (\n                <ImageIcon src={plus} style={{ marginTop: '0.2rem ' }} />\n              )}\n            </ImageIconSecondary>\n          </ImageIconContainer>\n\n          <ImageUploadHidden\n            onBlur={() => {\n              if (!fileData.file) {\n                setFileData({ state: false, file: {} });\n              }\n            }}\n            ref={hiddenFileInput}\n            type='file'\n            onChange={handleImageChange}\n            accept='image/gif, image/jpeg, image/png'\n            name='logo'\n          />\n        </ImageUploadContainer>\n        <ImageControlsContainer>\n          <ImageControlButtonsContainer>\n            {fileData.state ? (\n              <div>\n                <ImageControlButton onClick={handleImageClick}>\n                  <ImageControlButtonText>Change</ImageControlButtonText>\n                </ImageControlButton>\n\n                <ImageControlButton button='next' onClick={removeImage}>\n                  <ImageControlButtonText>Remove</ImageControlButtonText>\n                </ImageControlButton>\n              </div>\n            ) : null}\n          </ImageControlButtonsContainer>\n        </ImageControlsContainer>\n      </ImageContainerMain>\n    </FormItem>\n  );\n}","export const TAGS = [\n    {\n        id:0,\n        tag:'Remote'\n    },\n    {\n        id:1,\n        tag:'Artificial Intelligence'\n    },\n    {\n        id:2,\n        tag:'Machine Learning'\n    },\n    {\n        id:3,\n        tag:'Edtech'\n    },\n    {\n        id:4,\n        tag:'Fintech'\n    },\n    {\n        id:5,\n        tag:'E-learning'\n    },\n    {\n        id:5,\n        tag:'E-Commerce'\n    },\n    {\n        id:6,\n        tag:'SaaS'\n    },\n    {\n        id:7,\n        tag:'Software as a Service'\n    },\n    {\n        id:8,\n        tag:'Financial Services'\n    },\n    {\n        id:9,\n        tag:'Logistics'\n    },\n    {\n        id:10,\n        tag:'Supply Chain'\n    },\n    \n]","import { useState } from 'react'\nimport Header from './Header'\nimport { Menu } from '@headlessui/react'\nimport { LOCATIONS } from '../shared/locations'\nimport { COMPANY } from '../shared/company'\nimport Logo from './Logo/Logo';\nimport { TAGS } from '../shared/tags'\nimport { Redirect } from 'react-router-dom'\nimport { browserHistory } from 'react-router-dom'\nimport { render } from 'react-dom'\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function AddCompany(props) {\n\n    // var compCount= 0\n\n    const [locCount , setLocCount] = useState([])\n    const [tempLocations ,setTempLoc ] = useState([])\n    const [locSuggestions , setSuggestions] = useState([])\n    const [locText , setLocText] = useState('')\n\n    const [tagCount , setTagCount] = useState([])\n    const [tempTags ,setTempTags ] = useState([])\n    const [tagSuggestions , setTagSuggestions] = useState([])\n    const [tagText , setTagText] = useState('')\n\n    const [compName , setCompName] = useState('')\n    const [tagline , setTagline] = useState('')\n    const [logo ,setLogo] = useState()\n    const [location, setlocation] = useState([])\n    const [tags, setTags] = useState([])\n    const [assignments, setAssign] = useState()\n    const [openings, setOpenings] = useState()\n    const [website, setWebsite] = useState('')\n    const [about, setAbout] = useState('')\n\n    const onInputChange = (e) =>{\n        console.log(e.target.name)\n        if(e.target.name == \"companyName\"){\n            setCompName(e.target.value)\n        }\n        else if(e.target.name == \"tagline\"){\n            setTagline(e.target.value)\n        }\n        else if(e.target.name == \"assignments\"){\n            setAssign(e.target.value)\n        }\n        else if(e.target.name == \"openings\"){\n            setOpenings(e.target.value)\n        }\n        else if(e.target.name == \"company-website\"){\n            setWebsite(e.target.value)\n        }\n        else if(e.target.name == \"about\"){\n            setAbout(e.target.value)\n        }\n    }\n\n    const handleLogoCallback = (logoData) => {\n        setLogo(logoData.file)\n        console.log(logoData.file)\n    }\n\n    const addCompany =(e) =>{\n\n        let obj= {\n            'id':COMPANY.length,\n            'compName':compName,\n            'compTagline':tagline,\n            'logo':logo,\n            'assignments':assignments,\n            'openings':openings,\n            'location':location,\n            'tags':tags,\n            'website':website,\n            'about':about\n        }\n        COMPANY.push(obj);\n        console.log(obj)\n        props.history.push(\"/companies\")\n        setCompName('')\n        setTagline('')\n        setAssign('')\n        setOpenings('')\n        setLocText('')\n        setTagText('')\n        setWebsite('')\n        setAbout('')\n        e.preventDefault()\n        \n    }\n\n\n    const locAddClass = (e) => {\n        console.log(locCount)\n\n        if(locCount[e.target.id] === undefined || locCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            locCount[e.target.id] = 1;\n            location.push(e.target.id)\n            setLocText('')\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            locCount[e.target.id] = 0;\n            setlocation(location.filter((x)=>x!=e.target.id))\n            setLocText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onLocTextChanged = (e) =>{\n        const value = e.target.value;\n        let suggestions = [];\n        let fl=[];\n        let tl=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n        const regex = new RegExp(`^${value}`,'i');\n        fl = LOCATIONS.sort().filter(v => regex.test(v.location));\n        tl = tempLocations.sort().filter(v =>regex.test(v.location));\n        }\n\n        fl.map((obj) => {\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        tl.map((obj) =>{\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        if(newObjCount == 0){\n        let obj = {'id':-1, 'location':value}\n        suggestions.push(obj)\n        }\n        \n\n        fl.map((obj) => {\n        suggestions.push(obj)\n        })\n\n        tl.map((obj) => {\n        suggestions.push(obj)\n        })\n        \n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                locCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        // console.log(suggestions)\n        setSuggestions(suggestions);\n        setLocText(value)\n        console.log(locSuggestions)\n    }\n\n    const locSuggestionSelected = (value) => {\n        setLocText('')\n        setSuggestions([])\n\n        let floc = LOCATIONS.filter((loc) => loc.location == value) \n        let tloc = tempLocations.filter((loc) => loc.location == value)\n        if(floc.length == 0 && tloc.length == 0){\n            const obj = { 'id': LOCATIONS.length , 'location': value}\n            console.log(obj)\n            setTempLoc(arr => [...arr,obj])\n            // LOCATIONS.push(obj)\n            locCount[value] = 1\n        }\n        if(floc.length>0 || tloc.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n        }\n        locCount[value] = 1\n        location.push(value)\n    }\n\n    const tagAddClass = (e) => {\n        console.log(tagCount)\n\n        if(tagCount[e.target.id] === undefined || tagCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            tagCount[e.target.id] = 1;\n            setTagText('')\n            tags.push(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            tagCount[e.target.id] = 0;\n            setTags(tags.filter((x)=>x!=e.target.id))\n            setTagText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onTagTextChanged = (e) =>{\n        const value = e.target.value;\n        console.log(value)\n        let suggestions = []\n        let fTag=[];\n        let tTag=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n            const regex = new RegExp(`^${value}`,'i');\n            fTag = TAGS.sort().filter(v => regex.test(v.tag));\n            tTag = tempTags.sort().filter(v =>regex.test(v.tags));\n        }\n\n        fTag.map((obj) => {\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        tTag.map((obj) =>{\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        if(newObjCount == 0){\n            let obj = {'id':-1, 'tag':value}\n            suggestions.push(obj)\n        }\n\n        \n        fTag.map((obj) => {\n            suggestions.push(obj)\n        })\n    \n        tTag.map((obj) => {\n            suggestions.push(obj)\n        })\n\n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                tagCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        setTagSuggestions(suggestions)\n        setTagText(value)\n        console.log(tagSuggestions)\n    }\n\n    const tagSuggestionSelected = (value) => {\n        setTagText('')\n        setTagSuggestions([])\n        // console.log(value)\n\n        let fTag = TAGS.filter((loc) => loc.tag == value) \n        let tTag = tempTags.filter((loc) => loc.tag == value)\n        if(fTag.length == 0 && tTag.length == 0){\n            let valueArr = value.split(',');\n            let id =0\n            valueArr.map((string) =>{\n                let s = string.trim()\n                const obj = {'id':id , 'tag':s}\n                id +=1\n                tagCount[s] = 1\n                tags.push(s)\n                // TAGS.push(obj)\n                console.log(obj)\n                setTempTags(arr => [...arr,obj])\n                console.log(tempTags)\n            })\n        }\n        if(fTag.length>0 || tTag.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n            tagCount[value] = 1\n            tags.push(value)\n        }\n                \n    }\n\n    \n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Add Company</h1>\n            </div>\n        </header>\n        <main>\n            <div className=\"add-comp-cont max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"mt-10 sm:mt-0\">\n                    <div className=\" md:gap-6\">\n                        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                            <form onSubmit={(values) => addCompany(values)}>\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            \n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company name\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    id=\"companyName\"\n                                                    onChange={onInputChange}\n                                                    value={compName}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Tagline\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tagline\"\n                                                    id=\"tagline\"\n                                                    onChange={onInputChange}\n                                                    value={tagline}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label className=\"block text-sm font-medium text-gray-700\">Company Logo</label>\n                                                <Logo parentCallback = {handleLogoCallback}/>\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Assignments\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"assignments\"\n                                                    id=\"assignments\"\n                                                    value={assignments}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Openings\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"openings\"\n                                                    id=\"openings\"\n                                                    value={openings}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n\n                                          \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Location\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"location\"\n                                                    onChange={onLocTextChanged}\n                                                    id=\"location\"\n                                                    value={locText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (locSuggestions.length === 0) ? <></> : \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        locSuggestions.map((obj)=>{\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>locSuggestionSelected(obj.location)}\n                                                                                    >\n                                                                                    {obj.location}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n                                                {\n                                                    tempLocations.map((loc) =>{\n                                                        return(\n                                                            <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role__selected\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    LOCATIONS.map((loc) =>{\n                                                        return(\n                                                        <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Tags\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tags\"\n                                                    id=\"tags\"\n                                                    onChange={onTagTextChanged}\n                                                    value={tagText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (tagSuggestions.length === 0) ? <></> :  \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        tagSuggestions.map((obj) => {\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>tagSuggestionSelected(obj.tag)}\n                                                                                    >\n                                                                                    {obj.tag}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n\n                                                                    \n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n\n                                                {\n                                                    tempTags.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role__selected\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    TAGS.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"company-website\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Website\n                                                </label>\n                                                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                                                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                                    http://\n                                                    </span>\n                                                    <input\n                                                    type=\"text\"\n                                                    name=\"company-website\"\n                                                    id=\"company-website\"\n                                                    onChange={onInputChange}\n                                                    value={website}\n                                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                                                    placeholder=\"www.example.com\"\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                About\n                                                </label>\n                                                <div className=\"mt-1\">\n                                                <textarea\n                                                    id=\"about\"\n                                                    name=\"about\"\n                                                    rows={10}\n                                                    onChange={onInputChange}\n                                                    value={about}\n                                                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                    placeholder=\"you@example.com\"\n                                                    defaultValue={''}\n                                                />\n                                                </div>\n                                                <p className=\"mt-2 text-sm text-gray-500\">\n                                                Brief description for your profile. URLs are hyperlinked.\n                                                </p>\n                                            </div>\n\n                                    \n                                        </div>\n                                    </div>\n                                    <div className=\"px-4 py-3 bg-gray-50 text-center sm:px-6\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                        >\n                                            Add Company\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","import Header from './Header'\nimport { Link } from 'react-router-dom';\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport { COMPANY } from '../shared/company';\n  \nexport default function Company() {\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Companies</h1>\n\n            </div>\n        </header>\n        <main>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"add-comp\">\n                    <div>\n                        <input\n                            type=\"text\"\n                            name=\"first-name\"\n                            id=\"first-name\"\n                            placeholder=\"Search Company\"\n                            autoComplete=\"given-name\"\n                            className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        />\n                    </div>\n                    <div>\n                        <Link to={`/addCompany`}>\n                            <button\n                                type=\"submit\"\n                                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            >\n                                Add Company\n                            </button>\n                        </Link>\n                        \n                    </div>\n                </div>\n\n                <div class=\"row\">\n\n                    {\n                        COMPANY.map((comp)=>{\n                            return(\n                                <div class=\"column\" key={comp.id}>\n                                    <div class=\"content\">\n                                        <Link to={`/companies/${comp.compName}`}>\n                                            <a href=\"/\" >{comp.compName}</a>\n                                        </Link>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                    \n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\n\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CompanyHeader(props) {\n  const navigation = [\n    { name: 'Profile', href: `companies/${props.company.compName}`, current: false },\n    { name: 'Events', href: 'events', current: false },\n    { name: 'Jobs', href: `companies/${props.company.compName}/jobs`, current: false },\n  ]\n  return (\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                  <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <Link to={`/${item.href}`}>\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(\n                            item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                            'px-3 py-2 rounded-md text-sm font-medium'\n                          )}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      </Link>\n                      \n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <button className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                \n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </a>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}","import { useState,useEffect } from 'react'\nimport CompanyHeader from './CompanyHeader'\nimport { Menu } from '@headlessui/react'\nimport { LOCATIONS } from '../shared/locations'\nimport { COMPANY } from '../shared/company'\nimport Logo from './Logo/Logo';\nimport { TAGS } from '../shared/tags'\nimport { Link } from 'react-router-dom';\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function AddCompany(props) {\n    \n    const company = COMPANY.filter((comp) => comp.compName == props.compName)[0]\n    console.log(company)\n\n    const [locCount , setLocCount] = useState([])\n    const [tempLocations ,setTempLoc ] = useState([])\n    const [locSuggestions , setSuggestions] = useState([])\n    const [locText , setLocText] = useState('')\n\n    const [tagCount , setTagCount] = useState([])\n    const [tempTags ,setTempTags ] = useState([])\n    const [tagSuggestions , setTagSuggestions] = useState([])\n    const [tagText , setTagText] = useState('')\n\n    const [compName , setCompName] = useState('')\n    const [tagline , setTagline] = useState('')\n    const [logo ,setLogo] = useState()\n    const [location, setlocation] = useState([])\n    const [tags, setTags] = useState([])\n    const [assignments, setAssign] = useState()\n    const [openings, setOpenings] = useState()\n    const [website, setWebsite] = useState('')\n    const [about, setAbout] = useState('')\n\n    useEffect(() => {\n        company.location.map((obj)=>{\n            console.log(obj)\n            let ele = document.getElementById(obj)\n            console.log(ele)\n            if(ele!=null){\n                ele.className=\"preference__modal__roles__role__selected\"\n                locCount[obj] = 1\n            }\n            else{\n                setTempLoc((arr) => [...arr,{\n                    'id':LOCATIONS.length,\n                    'location':obj\n                }])\n                locCount[obj] = 1\n            }\n        },[])\n\n        company.tags.map((obj)=>{\n            console.log(obj)\n            let ele = document.getElementById(obj)\n            console.log(ele)\n            if(ele!=null){\n                ele.className=\"preference__modal__roles__role__selected\"\n                tagCount[obj] = 1\n            }\n            else{\n                setTempTags((arr) =>[...arr,{\n                    'id':TAGS.length,\n                    'tag':obj\n                }])\n                tagCount[obj] = 1\n            }\n        },[])\n\n        setCompName(company.compName)\n        setTagline(company.compTagline)\n        setLogo(company.logo)\n        setlocation(company.location)\n        setTags(company.tags)\n        setAssign(company.assignments)\n        setOpenings(company.openings)\n        setWebsite(company.website)\n        setAbout(company.about)\n    },[]);\n\n\n    \n\n    const onInputChange = (e) =>{\n        console.log(e.target.name)\n        if(e.target.name == \"companyName\"){\n            setCompName(e.target.value)\n        }\n        else if(e.target.name == \"tagline\"){\n            setTagline(e.target.value)\n        }\n        else if(e.target.name == \"assignments\"){\n            setAssign(e.target.value)\n        }\n        else if(e.target.name == \"openings\"){\n            setOpenings(e.target.value)\n        }\n        else if(e.target.name == \"company-website\"){\n            setWebsite(e.target.value)\n        }\n        else if(e.target.name == \"about\"){\n            setAbout(e.target.value)\n        }\n    }\n\n    const ModifyCompany =(e) =>{\n\n        let obj= {\n            'id':company.id,\n            'compName':compName,\n            'compTagline':tagline,\n            'assignments':assignments,\n            'openings':openings,\n            'location':location,\n            'tags':tags,\n            'website':website,\n            'about':about\n        }\n        COMPANY.splice(company.id,1)\n        COMPANY.splice(company.id,0,obj)\n        \n        console.log(obj)\n        // e.preventDefault()\n    }\n\n\n    const locAddClass = (e) => {\n        console.log(locCount)\n\n        if(locCount[e.target.id] === undefined || locCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            locCount[e.target.id] = 1;\n            location.push(e.target.id)\n            setLocText('')\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            locCount[e.target.id] = 0;\n            setlocation(location.filter((x)=>x!=e.target.id))\n            setLocText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onLocTextChanged = (e) =>{\n        const value = e.target.value;\n        let suggestions = [];\n        let fl=[];\n        let tl=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n        const regex = new RegExp(`^${value}`,'i');\n        fl = LOCATIONS.sort().filter(v => regex.test(v.location));\n        tl = tempLocations.sort().filter(v =>regex.test(v.location));\n        }\n\n        fl.map((obj) => {\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        tl.map((obj) =>{\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        if(newObjCount == 0){\n        let obj = {'id':-1, 'location':value}\n        suggestions.push(obj)\n        }\n        \n\n        fl.map((obj) => {\n        suggestions.push(obj)\n        })\n\n        tl.map((obj) => {\n        suggestions.push(obj)\n        })\n        \n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                locCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        // console.log(suggestions)\n        setSuggestions(suggestions);\n        setLocText(value)\n        console.log(locSuggestions)\n    }\n\n    const locSuggestionSelected = (value) => {\n        setLocText('')\n        setSuggestions([])\n\n        let floc = LOCATIONS.filter((loc) => loc.location == value) \n        let tloc = tempLocations.filter((loc) => loc.location == value)\n        if(floc.length == 0 && tloc.length == 0){\n            const obj = { 'id': LOCATIONS.length , 'location': value}\n            console.log(obj)\n            setTempLoc(arr => [...arr,obj])\n            locCount[value] = 1\n        }\n        if(floc.length>0 || tloc.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n        }\n        locCount[value] = 1\n        location.push(value)\n    }\n\n    const tagAddClass = (e) => {\n        console.log(tagCount)\n\n        if(tagCount[e.target.id] === undefined || tagCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            tagCount[e.target.id] = 1;\n            setTagText('')\n            tags.push(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            tagCount[e.target.id] = 0;\n            setTags(tags.filter((x)=>x!=e.target.id))\n            setTagText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onTagTextChanged = (e) =>{\n        const value = e.target.value;\n        console.log(value)\n        let suggestions = []\n        let fTag=[];\n        let tTag=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n            const regex = new RegExp(`^${value}`,'i');\n            fTag = TAGS.sort().filter(v => regex.test(v.tag));\n            tTag = tempTags.sort().filter(v =>regex.test(v.tags));\n        }\n\n        fTag.map((obj) => {\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        tTag.map((obj) =>{\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        if(newObjCount == 0){\n            let obj = {'id':-1, 'tag':value}\n            suggestions.push(obj)\n        }\n\n        \n        fTag.map((obj) => {\n            suggestions.push(obj)\n        })\n    \n        tTag.map((obj) => {\n            suggestions.push(obj)\n        })\n\n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                tagCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        setTagSuggestions(suggestions)\n        setTagText(value)\n        console.log(tagSuggestions)\n    }\n\n    const tagSuggestionSelected = (value) => {\n        setTagText('')\n        setTagSuggestions([])\n        // console.log(value)\n\n        let fTag = TAGS.filter((loc) => loc.tag == value) \n        let tTag = tempTags.filter((loc) => loc.tag == value)\n        if(fTag.length == 0 && tTag.length == 0){\n            let valueArr = value.split(',');\n            let id =0\n            valueArr.map((string) =>{\n                let s = string.trim()\n                const obj = {'id':id , 'tag':s}\n                id +=1\n                tagCount[s] = 1\n                tags.push(s)\n                console.log(obj)\n                setTempTags(arr => [...arr,obj])\n                console.log(tempTags)\n            })\n        }\n        if(fTag.length>0 || tTag.length >0 ){\n            // console.log(value)\n            // console.log(floc)\n            // console.log(tloc)\n            let element = document.getElementById(`${value}`)\n            // console.log(element)\n            element.className = 'preference__modal__roles__role__selected'\n            tagCount[value] = 1\n            tags.push(value)\n        }\n        \n        \n       \n        \n    }\n\n    return (\n        <>\n        <CompanyHeader company={company}/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">{company.compName}</h1>\n            </div>\n        </header>\n        <main>\n           \n            <div className=\"add-comp-cont max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"add-comp\">\n                    <div>\n                        <button\n                            onClick={ModifyCompany}\n                            type=\"submit\"\n                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        >\n                            Save Details\n                        </button>\n                        \n                    </div>\n                </div>\n                <div className=\"sm:mt-0\">\n                    <div className=\" md:gap-6\">\n                        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                            <form >\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"grid grid-cols-6 gap-6\">     \n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company name\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    id=\"companyName\"\n                                                    onChange={onInputChange}\n                                                    value={compName}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Tagline\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tagline\"\n                                                    id=\"tagline\"\n                                                    onChange={onInputChange}\n                                                    value={tagline}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label className=\"block text-sm font-medium text-gray-700\">Company Logo</label>\n                                                <Logo file={logo}/>\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Assignments\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"assignments\"\n                                                    id=\"assignments\"\n                                                    value={assignments}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Openings\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"openings\"\n                                                    id=\"openings\"\n                                                    value={openings}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n\n                                          \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Location\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"location\"\n                                                    onChange={onLocTextChanged}\n                                                    id=\"location\"\n                                                    value={locText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (locSuggestions.length === 0) ? <></> : \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        locSuggestions.map((obj)=>{\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>locSuggestionSelected(obj.location)}\n                                                                                    >\n                                                                                    {obj.location}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n                                                {\n                                                    tempLocations.map((loc) =>{\n                                                        return(\n                                                            <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role__selected\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    LOCATIONS.map((loc) =>{\n                                                        return(\n                                                        <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Tags\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tags\"\n                                                    id=\"tags\"\n                                                    onChange={onTagTextChanged}\n                                                    value={tagText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (tagSuggestions.length === 0) ? <></> :  \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        tagSuggestions.map((obj) => {\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>tagSuggestionSelected(obj.tag)}\n                                                                                    >\n                                                                                    {obj.tag}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n\n                                                                    \n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n\n                                                {\n                                                    tempTags.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role__selected\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    TAGS.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"company-website\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Website\n                                                </label>\n                                                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                                                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                                    http://\n                                                    </span>\n                                                    <input\n                                                    type=\"text\"\n                                                    name=\"company-website\"\n                                                    id=\"company-website\"\n                                                    onChange={onInputChange}\n                                                    value={website}\n                                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                                                    placeholder=\"www.example.com\"\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                About\n                                                </label>\n                                                <div className=\"mt-1\">\n                                                <textarea\n                                                    id=\"about\"\n                                                    name=\"about\"\n                                                    rows={10}\n                                                    onChange={onInputChange}\n                                                    value={about}\n                                                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                    placeholder=\"you@example.com\"\n                                                    defaultValue={''}\n                                                />\n                                                </div>\n                                                <p className=\"mt-2 text-sm text-gray-500\">\n                                                Brief description for your profile. URLs are hyperlinked.\n                                                </p>\n                                            </div>\n\n                                    \n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        </>\n    )\n   \n}","export const JOBS = [\n    \n];","import Header from './Header'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { COMPANY } from '../shared/company';\nimport { JOBS } from '../shared/jobs';\n  \nexport default function Jobs(props) {\n\n    const [jobs, setJobs] = useState(JOBS.filter((job) => job.compName == props.compName))\n\n    const [Count , setCount] = useState([])\n\n\n    const [title, setTitle] = useState('')\n    const [type, setType] = useState('')\n    const [desc, setDesc] = useState('')\n    const [resp, setResp] = useState('')\n\n    \n    const onInputChange = (e) =>{\n        console.log(e.target.name)\n        if(e.target.name == \"title\"){\n            setTitle(e.target.value)\n        }\n        else if(e.target.name == \"type\"){\n            setType(e.target.value)\n        }\n        else if(e.target.name == \"description\"){\n            setDesc(e.target.value)\n        }\n        else if(e.target.name == \"resposibilities\"){\n            setResp(e.target.value)\n        }\n        \n    }\n\n    const AddJob =(e) =>{\n\n        let obj= {\n            'id':JOBS.length,\n            'compName':props.compName,\n            'title':title,\n            'type':type,\n            'desc':desc,\n            'resp':resp\n        }\n        JOBS.push(obj);\n        setJobs(JOBS.filter((job) => job.compName == props.compName))\n        // compCount++;\n        console.log(obj)\n        closeModal()\n        e.preventDefault()\n    }\n\n    const AddClass = (e) => {\n        console.log(Count)\n        if(e.target.id == 'Fulltime'){\n            let ele = document.getElementById('Internship');\n            ele.className = 'preference__modal__roles__role'\n            Count['Internship'] = 0\n        }\n        else{\n            let ele = document.getElementById('Fulltime');\n            ele.className = 'preference__modal__roles__role'\n            Count['Fulltime'] = 0\n        }\n        if(Count[e.target.id] === undefined || Count[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            Count[e.target.id] = 1;\n            setType(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            Count[e.target.id] = 0;\n            setType('')\n        }\n    // console.log(locCount)\n    };\n\n    const openModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"block\"\n    }\n    \n\n    const closeModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"none\"\n    }\n    \n    window.onclick = function(event) {\n        const modal = document.getElementById(\"myModal\");\n        if (event.target == modal) {\n          modal.style.display = \"none\";\n        }\n    }\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Jobs</h1>\n\n            </div>\n        </header>\n        <main>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"add-comp\">\n                    <div>\n                        <button\n                            type=\"submit\"\n                            id=\"myBtn\"\n                            onClick={openModal}\n                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        >\n                            Add Job\n                        </button>\n                    </div>\n                </div>\n\n                <div id=\"myModal\" class=\"modal\">\n\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <span class=\"close\" onClick={closeModal}>&times;</span>\n                            <h2>Add Job</h2>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div className=\"mt-10 sm:mt-0\">\n                                <div className=\" md:gap-6\">\n                                    <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                                        <form onSubmit={AddJob}>\n                                        <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                            <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                                <div className=\"grid grid-cols-6 gap-6\">\n                                                    <div className=\"col-span-6 \">\n                                                        <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\n                                                            Title\n                                                        </label>\n                                                        <input\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                            id=\"title\"\n                                                            onChange={onInputChange}\n                                                            value={title}\n                                                            autoComplete=\"given-name\"\n                                                            className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                        />\n                                                            \n                                                        \n                                                    </div>\n\n                                                    <div className=\"col-span-6 \">\n                                                        <label htmlFor=\"last-name\" className=\"block text-sm font-medium text-gray-700\">\n                                                            Type\n                                                        </label>\n                                                        <input\n                                                            type=\"text\"\n                                                            name=\"type\"\n                                                            id=\"type\"\n                                                            onChange={onInputChange}\n                                                            value={type}\n                                                            placeholder=\"Fulltime or Internship\"\n                                                            autoComplete=\"family-name\"\n                                                            className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                        />\n\n                                                        <p  id='Fulltime' onClick={AddClass} className=\"preference__modal__roles__role\">Fulltime</p>\n                                                        <p  id='Internship' onClick={AddClass} className=\"preference__modal__roles__role\">Internship</p>\n                                                    </div>\n\n                                                    <div className=\"col-span-6\">\n                                                        <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                        Description\n                                                        </label>\n                                                        <div className=\"mt-1\">\n                                                        <textarea\n                                                            id=\"description\"\n                                                            name=\"description\"\n                                                            onChange={onInputChange}\n                                                            value={desc}\n                                                            rows={3}\n                                                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                            placeholder=\"you@example.com\"\n                                                            defaultValue={''}\n                                                        />\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"col-span-6\">\n                                                        <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                        Responsiblities\n                                                        </label>\n                                                        <div className=\"mt-1\">\n                                                        <textarea\n                                                            id=\"responsiblities\"\n                                                            name=\"responsiblities\"\n                                                            onChange={onInputChange}\n                                                            value={resp}\n                                                            rows={3}\n                                                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                            placeholder=\"you@example.com\"\n                                                            defaultValue={''}\n                                                        />\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                            <div className=\"px-4 py-3 bg-gray-50 text-center sm:px-6\">\n                                                <button\n                                                    type=\"submit\"\n                                                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                >\n                                                    Save\n                                                </button>\n                                            </div>\n                                        </div>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n\n                <div class=\"row-jobs\">\n\n                    {\n                        jobs.map((job)=>{\n                            return(\n                                <div class=\"column\" key={job.id}>\n                                    <div class=\"content\">\n                                        <a href=\"/\" >{job.title}</a>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                    \n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","import Header from \"./Header\"\n\nconst people = [\n    {\n      name: 'Jane Cooper',\n      email: 'jane.cooper@example.com',\n      college: 'Indian Institute of Technology Madras',\n      department: 'Computer Science',\n      sem:'4th Sem/2nd Year'\n    },\n    // More people...\n  ]\n  \nexport default function Students() {\n\n\n    const openModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"block\"\n    }\n    \n\n    const closeModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"none\"\n    }\n    \n    window.onclick = function(event) {\n        const modal = document.getElementById(\"myModal\");\n        if (event.target == modal) {\n          modal.style.display = \"none\";\n        }\n    }\n\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Students</h1>\n            </div>\n        </header>\n        <main>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"flex flex-col\">\n                    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                    <thead className=\"bg-gray-50\">\n                                        <tr>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            Name\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            Email\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            College\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            Current Sem/Year\n                                        </th>\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                        >\n                                            Profiles\n                                        </th>\n                                        <th scope=\"col\" className=\"relative px-6 py-3\">\n                                            <span className=\"sr-only\">View</span>\n                                        </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                                        {people.map((person) => (\n                                        <tr key={person.email}>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"flex items-center\">\n                                                    <div className=\"ml-4\">\n                                                        <div className=\"text-sm font-medium text-gray-900\">{person.name}</div>\n                                                    </div>\n                                                </div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{person.email}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{person.college}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{person.department}</div>\n                                                <div className=\"text-sm text-gray-900\">{person.sem}</div>\n                                            </td>\n                                            <td className=\"px-6 py-4 whitespace-nowrap\">\n                                                <div className=\"text-sm text-gray-900\">{person.title}</div>\n                                            </td>\n                                            \n                                            \n                                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                                <a onClick={openModal} href=\"#\" className=\"text-indigo-600 hover:text-indigo-900\">\n                                                    View\n                                                </a>\n                                            </td>\n                                        </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"myModal\" class=\"modal\">\n\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <span class=\"close\" onClick={closeModal}>&times;</span>\n                            <h2>Documents</h2>\n                        </div>\n                        <div class=\"doc-modal-body\">\n                            <iframe src=\"http://www.africau.edu/images/default/sample.pdf\" width=\"500px\" height=\"500px\" frameborder=\"0\"></iframe>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <div className=\"px-4 py-3 text-center sm:px-6\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                >\n                                    Verify\n                                </button>\n                                &nbsp;&nbsp;\n                                <button\n                                    type=\"submit\"\n                                    className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                >\n                                    Re-Submit\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </main>\n        </>\n        \n    )\n  }","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport AddCompany from './AddCompany';\nimport Company from './Company';\nimport CompanyProfile from './CompanyProfile';\nimport Header from './Header';\nimport Jobs from './Jobs';\nimport Students from './Students';\n\nfunction Main(props) {\n\n    const CompProfile = ({match}) => {\n        return(\n            <CompanyProfile compName={match.params.name}/>\n        );\n    };\n\n    const JobProfile = ({match}) => {\n        return(\n            <Jobs compName={match.params.name}/>\n        );\n    }\n\n    return (\n        <>\n        <Switch>\n            <Route exact path=\"/companies\" component={Company}/>\n            <Route exact path=\"/verifications\" component={Students}/>\n            <Route exact path=\"/addCompany\" component={AddCompany}/>\n            <Route exact path=\"/companies/:name\" component={CompProfile}/>\n            <Route exact path=\"/companies/:name/jobs\" component={JobProfile}/>\n            <Route path=\"/\" component={Header}/>\n        </Switch>\n        </>\n    );\n}\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/Main';\n\n\nfunction App() {\n  return (\n    <>\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}