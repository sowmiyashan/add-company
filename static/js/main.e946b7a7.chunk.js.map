{"version":3,"sources":["logo.svg","components/Header.js","shared/locations.js","shared/company.js","components/Logo/center.js","components/Logo/plus-alt2.svg","components/Logo/Logo.js","shared/tags.js","components/AddCompany.js","components/Company.js","components/CompanyProfile.js","components/Jobs.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["navigation","name","href","current","classNames","classes","filter","Boolean","join","Header","as","className","open","Button","src","alt","map","item","to","undefined","Panel","LOCATIONS","id","location","COMPANY","FormItem","styled","div","ImageContainerMain","ImageUploadContainer","ImageUploadHidden","input","ImageIconContainer","ImageIconSecondary","ImageIcon","img","ImageControlsContainer","ImageControlButtonsContainer","p","ImageControlButtonText","span","ImageControlButton","label","props","button","Step2","useState","file","state","fileData","setFileData","useEffect","hiddenFileInput","useRef","style","height","width","URL","createObjectURL","plus","marginTop","onBlur","ref","type","onChange","event","target","files","parentCallback","accept","onClick","click","TAGS","tag","AddCompany","compCount","locCount","tempLocations","setTempLoc","locSuggestions","setSuggestions","locText","setLocText","tagCount","tempTags","setTempTags","tagSuggestions","setTagSuggestions","tagText","setTagText","compName","setCompName","tagline","setTagline","logo","setLogo","setlocation","tags","setTags","assignments","setAssign","openings","setOpenings","website","setWebsite","about","setAbout","onInputChange","e","console","log","value","locAddClass","push","x","tagAddClass","onSubmit","values","obj","history","preventDefault","addCompany","htmlFor","autoComplete","logoData","suggestions","fl","tl","newObjCount","length","regex","RegExp","sort","v","test","i","elements","document","getElementsByClassName","Items","static","Item","active","floc","loc","tloc","arr","getElementById","locSuggestionSelected","fTag","tTag","valueArr","split","string","s","trim","tagSuggestionSelected","placeholder","rows","defaultValue","Company","class","comp","company","ele","compTagline","Jobs","window","onclick","modal","display","Main","exact","path","component","match","params","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e946b7a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\n\nconst navigation = [\n  { name: 'Home', href: '', current: false },\n  { name: 'Companies', href: 'companies', current: false },\n \n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Header() {\n  return (\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                  <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                    alt=\"JUMPSTART\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <Link to={`/${item.href}`}>\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className={classNames(\n                            item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                            'px-3 py-2 rounded-md text-sm font-medium'\n                          )}\n                          aria-current={item.current ? 'page' : undefined}\n                        >\n                          {item.name}\n                        </a>\n                      </Link>\n                      \n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <button className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                \n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </a>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}","export const LOCATIONS = [\n    {\n        id:0,\n        location:'Singapore, SG'\n    },\n    {\n        id:1,\n        location:'Hong Kong, HK'\n    },\n    {\n        id:2,\n        location:'San Francisco, California, USA'\n    },\n    {\n        id:3,\n        location:'Bangalore, Karnataka, India'\n    },\n    {\n        id:4,\n        location:'Gurugram, Haryana, India'\n    }\n]","export const COMPANY = [\n    \n];","import styled from 'styled-components/macro';\n\n// ---------------  Image Upload  ---------------\n\nexport const FormItem = styled.div`\n  margin-bottom: 1.75rem;\n`;\nexport const ImageContainerMain = styled.div`\n  display: flex;\n  margin-top: 1rem;\n  margin-bottom: -1.5rem;\n`;\n\nexport const ImageUploadContainer = styled.div`\n  width: 112px;\n  height: 112px;\n  margin-right: 1.5rem;\n\n  background-color: #f5f7fa;\n  border: 1px dashed #dadce1;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background 0.25s ease;\n  position: relative;\n  &:hover {\n    background: #eef2f7;\n  }\n`;\n\nexport const ImageUploadHidden = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #fff;\n  opacity: 0;\n  padding: 0;\n  width: 100%;\n  z-index: 10;\n  cursor: pointer;\n  &::file-selector-button {\n    cursor: pointer;\n  }\n`;\nexport const ImageIconContainer = styled.div`\n  text-align: center;\n  cursor: pointer;\n`;\nexport const ImageIconSecondary = styled.div`\n  font-size: 1.2rem;\n  color: #949bac;\n  cursor: pointer;\n`;\nexport const ImageIcon = styled.img`\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n  font-size: 1.2rem;\n  color: #949bac;\n  cursor: pointer;\n  filter: invert(64%) sepia(25%) saturate(183%) hue-rotate(184deg)\n    brightness(94%) contrast(84%);\n`;\n\nexport const ImageControlsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport const ImageControlDetailsContainer = styled.div``;\nexport const ImageControlTitle = styled.div``;\nexport const ImageControlDescription = styled.p`\n  padding-top: 4px;\n  font-size: 0.875rem;\n  color: #51596c;\n  max-width: 320px;\n  margin: 0;\n`;\n\nexport const ImageControlButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ImageControlButtonText = styled.span``;\n\nexport const ImageControlButton = styled.label`\n  height: 1.2rem;\n  font-size: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid #ced0d5;\n  color: #1f2430;\n  cursor: pointer;\n  margin: 0 1rem 0 0;\n  display: inline-flex !important;\n  align-items: center !important;\n  justify-content: space-between !important;\n  background-color: ${(props) =>\n    props.button === 'next' ? '#4440db' : 'white'};\n  text-align: center;\n  vertical-align: middle;\n  display: flex;\n\n  &:hover {\n    border: 1px solid #b8bbc2;\n    background-color: ${(props) =>\n      props.button === 'next' ? '#4440db' : 'white'};\n    color: ${(props) => (props.button === 'next' ? 'white' : '#4440db')};\n  }\n`;\n\nexport const ImageControlButtonIcon = styled.img`\n  display: inline-block;\n  width: 1.9rem;\n  height: 1.9rem;\n  stroke-width: 0;\n  padding-right: 0.625rem !important;\n  stroke: currentColor;\n  fill: currentColor;\n  font-size: 1.2rem;\n  cursor: pointer;\n  filter: invert(25%) sepia(83%) saturate(5900%) hue-rotate(242deg)\n    brightness(91%) contrast(91%);\n`;","export default __webpack_public_path__ + \"static/media/plus-alt2.697d11bf.svg\";","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport {\n  ImageControlsContainer,\n  FormItem,\n  ImageContainerMain,\n  ImageUploadContainer,\n  ImageUploadHidden,\n  ImageIconContainer,\n  ImageIconSecondary,\n  ImageIcon,\n  ImageControlButtonsContainer,\n  ImageControlButton,\n  ImageControlButtonText,\n} from './center';\n\nimport plus from './plus-alt2.svg';\n\nexport default function Step2(props) {\n  const [fileData, setFileData] = useState({\n    file: undefined,\n    state: false,\n  });\n\n  useEffect(() => {\n    if(props.file!=null){\n      setFileData({ state: true, file: props.file });\n    }\n    if (!fileData.file && fileData.state === true) {\n      setFileData({ state: false, file: undefined });\n    }\n  }, [fileData]);\n  const hiddenFileInput = useRef(null);\n\n  const handleImageClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n  const handleImageChange = (event) => {\n    setFileData({ state: true, file: event.target.files[0] });\n    props.parentCallback({ state: true, file: event.target.files[0] })\n  };\n  const removeImage = (event) => {\n    setFileData({ state: false, file: {} });\n  };\n\n  return (\n    <FormItem>\n      <ImageContainerMain>\n        <ImageUploadContainer>\n          <ImageIconContainer>\n            <ImageIconSecondary>\n              {fileData.state ? (\n                <img\n                  style={{ height: '100px', width: '100px' }}\n                  src={URL.createObjectURL(fileData.file)}\n                  alt='none'\n                />\n              ) : (\n                <ImageIcon src={plus} style={{ marginTop: '0.2rem ' }} />\n              )}\n            </ImageIconSecondary>\n          </ImageIconContainer>\n\n          <ImageUploadHidden\n            onBlur={() => {\n              if (!fileData.file) {\n                setFileData({ state: false, file: {} });\n              }\n            }}\n            ref={hiddenFileInput}\n            type='file'\n            onChange={handleImageChange}\n            accept='image/gif, image/jpeg, image/png'\n            name='logo'\n          />\n        </ImageUploadContainer>\n        <ImageControlsContainer>\n          <ImageControlButtonsContainer>\n            {fileData.state ? (\n              <div>\n                <ImageControlButton onClick={handleImageClick}>\n                  <ImageControlButtonText>Change</ImageControlButtonText>\n                </ImageControlButton>\n\n                <ImageControlButton button='next' onClick={removeImage}>\n                  <ImageControlButtonText>Remove</ImageControlButtonText>\n                </ImageControlButton>\n              </div>\n            ) : null}\n          </ImageControlButtonsContainer>\n        </ImageControlsContainer>\n      </ImageContainerMain>\n    </FormItem>\n  );\n}","export const TAGS = [\n    {\n        id:0,\n        tag:'Remote'\n    },\n    {\n        id:1,\n        tag:'Artificial Intelligence'\n    },\n    {\n        id:2,\n        tag:'Machine Learning'\n    },\n    {\n        id:3,\n        tag:'Edtech'\n    },\n    {\n        id:4,\n        tag:'Fintech'\n    },\n    {\n        id:5,\n        tag:'E-learning'\n    },\n    {\n        id:5,\n        tag:'E-Commerce'\n    },\n    {\n        id:6,\n        tag:'SaaS'\n    },\n    {\n        id:7,\n        tag:'Software as a Service'\n    },\n    {\n        id:8,\n        tag:'Financial Services'\n    },\n    {\n        id:9,\n        tag:'Logistics'\n    },\n    {\n        id:10,\n        tag:'Supply Chain'\n    },\n    \n]","import { useState } from 'react'\nimport Header from './Header'\nimport { Menu } from '@headlessui/react'\nimport { LOCATIONS } from '../shared/locations'\nimport { COMPANY } from '../shared/company'\nimport Logo from './Logo/Logo';\nimport { TAGS } from '../shared/tags'\nimport { Redirect } from 'react-router-dom'\nimport { browserHistory } from 'react-router-dom'\nimport { render } from 'react-dom'\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function AddCompany(props) {\n\n    var compCount= 0\n\n    const [locCount , setLocCount] = useState([])\n    const [tempLocations ,setTempLoc ] = useState([])\n    const [locSuggestions , setSuggestions] = useState([])\n    const [locText , setLocText] = useState('')\n\n    const [tagCount , setTagCount] = useState([])\n    const [tempTags ,setTempTags ] = useState([])\n    const [tagSuggestions , setTagSuggestions] = useState([])\n    const [tagText , setTagText] = useState('')\n\n    const [compName , setCompName] = useState('')\n    const [tagline , setTagline] = useState('')\n    const [logo ,setLogo] = useState()\n    const [location, setlocation] = useState([])\n    const [tags, setTags] = useState([])\n    const [assignments, setAssign] = useState()\n    const [openings, setOpenings] = useState()\n    const [website, setWebsite] = useState('')\n    const [about, setAbout] = useState('')\n\n    const onInputChange = (e) =>{\n        console.log(e.target.name)\n        if(e.target.name == \"companyName\"){\n            setCompName(e.target.value)\n        }\n        else if(e.target.name == \"tagline\"){\n            setTagline(e.target.value)\n        }\n        else if(e.target.name == \"assignments\"){\n            setAssign(e.target.value)\n        }\n        else if(e.target.name == \"openings\"){\n            setOpenings(e.target.value)\n        }\n        else if(e.target.name == \"company-website\"){\n            setWebsite(e.target.value)\n        }\n        else if(e.target.name == \"about\"){\n            setAbout(e.target.value)\n        }\n    }\n\n    const handleLogoCallback = (logoData) => {\n        setLogo(logoData.file)\n        console.log(logoData.file)\n    }\n\n    const addCompany =(e) =>{\n\n        let obj= {\n            'id':compCount,\n            'compName':compName,\n            'compTagline':tagline,\n            'logo':logo,\n            'assignments':assignments,\n            'openings':openings,\n            'location':location,\n            'tags':tags,\n            'website':website,\n            'about':about\n        }\n        COMPANY.push(obj);\n        compCount++;\n        console.log(obj)\n        props.history.push(\"/companies\")\n        setCompName('')\n        setTagline('')\n        setAssign('')\n        setOpenings('')\n        setLocText('')\n        setTagText('')\n        setWebsite('')\n        setAbout('')\n        e.preventDefault()\n        \n    }\n\n\n    const locAddClass = (e) => {\n        console.log(locCount)\n\n        if(locCount[e.target.id] === undefined || locCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            locCount[e.target.id] = 1;\n            location.push(e.target.id)\n            setLocText(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            locCount[e.target.id] = 0;\n            setlocation(location.filter((x)=>x!=e.target.id))\n            setLocText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onLocTextChanged = (e) =>{\n        const value = e.target.value;\n        let suggestions = [];\n        let fl=[];\n        let tl=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n        const regex = new RegExp(`^${value}`,'i');\n        fl = LOCATIONS.sort().filter(v => regex.test(v.location));\n        tl = tempLocations.sort().filter(v =>regex.test(v.location));\n        }\n\n        fl.map((obj) => {\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        tl.map((obj) =>{\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        if(newObjCount == 0){\n        let obj = {'id':-1, 'location':value}\n        suggestions.push(obj)\n        }\n        \n\n        fl.map((obj) => {\n        suggestions.push(obj)\n        })\n\n        tl.map((obj) => {\n        suggestions.push(obj)\n        })\n        \n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                locCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        // console.log(suggestions)\n        setSuggestions(suggestions);\n        setLocText(value)\n        console.log(locSuggestions)\n    }\n\n    const locSuggestionSelected = (value) => {\n        setLocText(value)\n        setSuggestions([])\n\n        let floc = LOCATIONS.filter((loc) => loc.location == value) \n        let tloc = tempLocations.filter((loc) => loc.location == value)\n        if(floc.length == 0 && tloc.length == 0){\n            const obj = { 'id': LOCATIONS.length , 'location': value}\n            console.log(obj)\n            setTempLoc(arr => [...arr,obj])\n            // LOCATIONS.push(obj)\n            locCount[value] = 1\n        }\n        if(floc.length>0 || tloc.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n        }\n        locCount[value] = 1\n        location.push(value)\n    }\n\n    const tagAddClass = (e) => {\n        console.log(tagCount)\n\n        if(tagCount[e.target.id] === undefined || tagCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            tagCount[e.target.id] = 1;\n            setTagText(e.target.id)\n            tags.push(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            tagCount[e.target.id] = 0;\n            setTags(tags.filter((x)=>x!=e.target.id))\n            setTagText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onTagTextChanged = (e) =>{\n        const value = e.target.value;\n        console.log(value)\n        let suggestions = []\n        let fTag=[];\n        let tTag=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n            const regex = new RegExp(`^${value}`,'i');\n            fTag = TAGS.sort().filter(v => regex.test(v.tag));\n            tTag = tempTags.sort().filter(v =>regex.test(v.tags));\n        }\n\n        fTag.map((obj) => {\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        tTag.map((obj) =>{\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        if(newObjCount == 0){\n            let obj = {'id':-1, 'tag':value}\n            suggestions.push(obj)\n        }\n\n        \n        fTag.map((obj) => {\n            suggestions.push(obj)\n        })\n    \n        tTag.map((obj) => {\n            suggestions.push(obj)\n        })\n\n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                tagCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        setTagSuggestions(suggestions)\n        setTagText(value)\n        console.log(tagSuggestions)\n    }\n\n    const tagSuggestionSelected = (value) => {\n        setTagText(value)\n        setTagSuggestions([])\n        // console.log(value)\n\n        let fTag = TAGS.filter((loc) => loc.tag == value) \n        let tTag = tempTags.filter((loc) => loc.tag == value)\n        if(fTag.length == 0 && tTag.length == 0){\n            let valueArr = value.split(',');\n            let id =0\n            valueArr.map((string) =>{\n                let s = string.trim()\n                const obj = {'id':id , 'tag':s}\n                id +=1\n                tagCount[s] = 1\n                tags.push(s)\n                // TAGS.push(obj)\n                console.log(obj)\n                setTempTags(arr => [...arr,obj])\n                console.log(tempTags)\n            })\n        }\n        if(fTag.length>0 || tTag.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n            tagCount[value] = 1\n            tags.push(value)\n        }\n        \n        \n       \n        \n    }\n\n    \n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Add Company</h1>\n            </div>\n        </header>\n        <main>\n            <div className=\"add-comp-cont max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"mt-10 sm:mt-0\">\n                    <div className=\" md:gap-6\">\n                        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                            <form onSubmit={(values) => addCompany(values)}>\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            \n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company name\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    id=\"companyName\"\n                                                    onChange={onInputChange}\n                                                    value={compName}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Tagline\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tagline\"\n                                                    id=\"tagline\"\n                                                    onChange={onInputChange}\n                                                    value={tagline}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label className=\"block text-sm font-medium text-gray-700\">Company Logo</label>\n                                                <Logo parentCallback = {handleLogoCallback}/>\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Assignments\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"assignments\"\n                                                    id=\"assignments\"\n                                                    value={assignments}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Openings\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"openings\"\n                                                    id=\"openings\"\n                                                    value={openings}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n\n                                          \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Location\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"location\"\n                                                    onChange={onLocTextChanged}\n                                                    id=\"location\"\n                                                    value={locText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (locSuggestions.length === 0) ? <></> : \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        locSuggestions.map((obj)=>{\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>locSuggestionSelected(obj.location)}\n                                                                                    >\n                                                                                    {obj.location}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n                                                {\n                                                    tempLocations.map((loc) =>{\n                                                        return(\n                                                            <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role__selected\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    LOCATIONS.map((loc) =>{\n                                                        return(\n                                                        <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Tags\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tags\"\n                                                    id=\"tags\"\n                                                    onChange={onTagTextChanged}\n                                                    value={tagText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (tagSuggestions.length === 0) ? <></> :  \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        tagSuggestions.map((obj) => {\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>tagSuggestionSelected(obj.tag)}\n                                                                                    >\n                                                                                    {obj.tag}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n\n                                                                    \n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n\n                                                {\n                                                    tempTags.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role__selected\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    TAGS.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"company-website\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Website\n                                                </label>\n                                                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                                                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                                    http://\n                                                    </span>\n                                                    <input\n                                                    type=\"text\"\n                                                    name=\"company-website\"\n                                                    id=\"company-website\"\n                                                    onChange={onInputChange}\n                                                    value={website}\n                                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                                                    placeholder=\"www.example.com\"\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                About\n                                                </label>\n                                                <div className=\"mt-1\">\n                                                <textarea\n                                                    id=\"about\"\n                                                    name=\"about\"\n                                                    rows={10}\n                                                    onChange={onInputChange}\n                                                    value={about}\n                                                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                    placeholder=\"you@example.com\"\n                                                    defaultValue={''}\n                                                />\n                                                </div>\n                                                <p className=\"mt-2 text-sm text-gray-500\">\n                                                Brief description for your profile. URLs are hyperlinked.\n                                                </p>\n                                            </div>\n\n                                    \n                                        </div>\n                                    </div>\n                                    <div className=\"px-4 py-3 bg-gray-50 text-center sm:px-6\">\n                                        <button\n                                            type=\"submit\"\n                                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                        >\n                                            Add Company\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","import Header from './Header'\nimport { Link } from 'react-router-dom';\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport { COMPANY } from '../shared/company';\n  \nexport default function Company() {\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Companies</h1>\n\n            </div>\n        </header>\n        <main>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"add-comp\">\n                    <div>\n                        <input\n                            type=\"text\"\n                            name=\"first-name\"\n                            id=\"first-name\"\n                            placeholder=\"Search Company\"\n                            autoComplete=\"given-name\"\n                            className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                        />\n                    </div>\n                    <div>\n                        <Link to={`/addCompany`}>\n                            <button\n                                type=\"submit\"\n                                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            >\n                                Add Company\n                            </button>\n                        </Link>\n                        \n                    </div>\n                </div>\n\n                <div class=\"row\">\n\n                    {\n                        COMPANY.map((comp)=>{\n                            return(\n                                <div class=\"column\" key={comp.id}>\n                                    <div class=\"content\">\n                                        <Link to={`/companies/${comp.compName}`}>\n                                            <a href=\"/\" >{comp.compName}</a>\n                                        </Link>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                    \n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","import { useState,useEffect } from 'react'\nimport Header from './Header'\nimport { Menu } from '@headlessui/react'\nimport { LOCATIONS } from '../shared/locations'\nimport { COMPANY } from '../shared/company'\nimport Logo from './Logo/Logo';\nimport { TAGS } from '../shared/tags'\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function AddCompany(props) {\n    \n    const company = COMPANY.filter((comp) => comp.compName == props.compName)[0]\n    console.log(company)\n\n    const [locCount , setLocCount] = useState([])\n    const [tempLocations ,setTempLoc ] = useState([])\n    const [locSuggestions , setSuggestions] = useState([])\n    const [locText , setLocText] = useState('')\n\n    const [tagCount , setTagCount] = useState([])\n    const [tempTags ,setTempTags ] = useState([])\n    const [tagSuggestions , setTagSuggestions] = useState([])\n    const [tagText , setTagText] = useState('')\n\n    const [compName , setCompName] = useState('')\n    const [tagline , setTagline] = useState('')\n    const [location, setlocation] = useState([])\n    const [tags, setTags] = useState([])\n    const [assignments, setAssign] = useState()\n    const [openings, setOpenings] = useState()\n    const [website, setWebsite] = useState('')\n    const [about, setAbout] = useState('')\n\n    useEffect(() => {\n        company.location.map((obj)=>{\n            console.log(obj)\n            let ele = document.getElementById(obj)\n            console.log(ele)\n            if(ele!=null){\n                ele.className=\"preference__modal__roles__role__selected\"\n            }\n            else{\n                setTempLoc((arr) => [...arr,{\n                    'id':LOCATIONS.length,\n                    'location':obj\n                }])\n                // LOCATIONS.push({\n                //     'id':LOCATIONS.length,\n                //     'location':obj\n                // })\n            }\n        })\n\n        company.tags.map((obj)=>{\n            console.log(obj)\n            let ele = document.getElementById(obj)\n            console.log(ele)\n            if(ele!=null){\n                ele.className=\"preference__modal__roles__role__selected\"\n            }\n            else{\n                setTempTags((arr) =>[...arr,{\n                    'id':TAGS.length,\n                    'tag':obj\n                }])\n                // TAGS.push({\n                //     'id':TAGS.length,\n                //     'tag':obj\n                // })\n            }\n        })\n    });\n\n    var compCount= 0\n\n    \n\n    const onInputChange = (e) =>{\n        console.log(e.target.name)\n        if(e.target.name == \"companyName\"){\n            setCompName(e.target.value)\n        }\n        else if(e.target.name == \"tagline\"){\n            setTagline(e.target.value)\n        }\n        else if(e.target.name == \"assignments\"){\n            setAssign(e.target.value)\n        }\n        else if(e.target.name == \"openings\"){\n            setOpenings(e.target.value)\n        }\n        else if(e.target.name == \"company-website\"){\n            setWebsite(e.target.value)\n        }\n        else if(e.target.name == \"about\"){\n            setAbout(e.target.value)\n        }\n    }\n\n    const addCompany =(e) =>{\n\n        let obj= {\n            'id':compCount,\n            'compName':compName,\n            'compTagline':tagline,\n            'assignments':assignments,\n            'openings':openings,\n            'location':location,\n            'tags':tags,\n            'website':website,\n            'about':about\n        }\n        // COMPANY.push(obj);\n        // compCount++;\n        console.log(obj)\n        setCompName('')\n        setTagline('')\n        setAssign('')\n        setOpenings('')\n        setLocText('')\n        setTagText('')\n        setWebsite('')\n        setAbout('')\n        e.preventDefault()\n    }\n\n\n    const locAddClass = (e) => {\n        console.log(locCount)\n\n        if(locCount[e.target.id] === undefined || locCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            locCount[e.target.id] = 1;\n            location.push(e.target.id)\n            setLocText(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            locCount[e.target.id] = 0;\n            setlocation(location.filter((x)=>x!=e.target.id))\n            setLocText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onLocTextChanged = (e) =>{\n        const value = e.target.value;\n        let suggestions = [];\n        let fl=[];\n        let tl=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n        const regex = new RegExp(`^${value}`,'i');\n        fl = LOCATIONS.sort().filter(v => regex.test(v.location));\n        tl = tempLocations.sort().filter(v =>regex.test(v.location));\n        }\n\n        fl.map((obj) => {\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        tl.map((obj) =>{\n        if(obj.location == value){\n            newObjCount+=1\n        }\n        })\n\n        if(newObjCount == 0){\n        let obj = {'id':-1, 'location':value}\n        suggestions.push(obj)\n        }\n        \n\n        fl.map((obj) => {\n        suggestions.push(obj)\n        })\n\n        tl.map((obj) => {\n        suggestions.push(obj)\n        })\n        \n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                locCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        // console.log(suggestions)\n        setSuggestions(suggestions);\n        setLocText(value)\n        console.log(locSuggestions)\n    }\n\n    const locSuggestionSelected = (value) => {\n        setLocText(value)\n        setSuggestions([])\n\n        let floc = LOCATIONS.filter((loc) => loc.location == value) \n        let tloc = tempLocations.filter((loc) => loc.location == value)\n        if(floc.length == 0 && tloc.length == 0){\n            const obj = { 'id': LOCATIONS.length , 'location': value}\n            console.log(obj)\n            setTempLoc(arr => [...arr,obj])\n            locCount[value] = 1\n        }\n        if(floc.length>0 || tloc.length >0 ){\n            let element = document.getElementById(`${value}`)\n            element.className = 'preference__modal__roles__role__selected'\n        }\n        locCount[value] = 1\n        location.push(value)\n    }\n\n    const tagAddClass = (e) => {\n        console.log(tagCount)\n\n        if(tagCount[e.target.id] === undefined || tagCount[e.target.id] === 0){\n            // console.log(locCount[e.target.id]);\n            e.target.className = ' preference__modal__roles__role__selected';\n            tagCount[e.target.id] = 1;\n            setTagText(e.target.id)\n            tags.push(e.target.id)\n        }\n        else{\n            // console.log(locCount[e.target.id]);\n            e.target.className = 'preference__modal__roles__role';\n            tagCount[e.target.id] = 0;\n            setTags(tags.filter((x)=>x!=e.target.id))\n            setTagText('')\n        }\n    // console.log(locCount)\n    };\n\n\n    const onTagTextChanged = (e) =>{\n        const value = e.target.value;\n        console.log(value)\n        let suggestions = []\n        let fTag=[];\n        let tTag=[];\n        let newObjCount=0 \n\n        if(value.length > 0 ){\n            const regex = new RegExp(`^${value}`,'i');\n            fTag = TAGS.sort().filter(v => regex.test(v.tag));\n            tTag = tempTags.sort().filter(v =>regex.test(v.tags));\n        }\n\n        fTag.map((obj) => {\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        tTag.map((obj) =>{\n            if(obj.tag == value){\n                newObjCount+=1\n            }\n        })\n    \n        if(newObjCount == 0){\n            let obj = {'id':-1, 'tag':value}\n            suggestions.push(obj)\n        }\n\n        \n        fTag.map((obj) => {\n            suggestions.push(obj)\n        })\n    \n        tTag.map((obj) => {\n            suggestions.push(obj)\n        })\n\n        if(value.length == 0){\n            suggestions= []\n            let i=0\n            let elements = document.getElementsByClassName('preference__modal__roles__role__selected')\n            for(i=0;i<elements.length;i++){\n                tagCount[elements[i].id]=0\n                elements[i].className='preference__modal__roles__role'\n            }\n        }\n        setTagSuggestions(suggestions)\n        setTagText(value)\n        console.log(tagSuggestions)\n    }\n\n    const tagSuggestionSelected = (value) => {\n        setTagText(value)\n        setTagSuggestions([])\n        // console.log(value)\n\n        let fTag = TAGS.filter((loc) => loc.tag == value) \n        let tTag = tempTags.filter((loc) => loc.tag == value)\n        if(fTag.length == 0 && tTag.length == 0){\n            let valueArr = value.split(',');\n            let id =0\n            valueArr.map((string) =>{\n                let s = string.trim()\n                const obj = {'id':id , 'tag':s}\n                id +=1\n                tagCount[s] = 1\n                tags.push(s)\n                console.log(obj)\n                setTempTags(arr => [...arr,obj])\n                console.log(tempTags)\n            })\n        }\n        if(fTag.length>0 || tTag.length >0 ){\n            // console.log(value)\n            // console.log(floc)\n            // console.log(tloc)\n            let element = document.getElementById(`${value}`)\n            // console.log(element)\n            element.className = 'preference__modal__roles__role__selected'\n            tagCount[value] = 1\n            tags.push(value)\n        }\n        \n        \n       \n        \n    }\n\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">{company.compName}</h1>\n            </div>\n        </header>\n        <main>\n            <div className=\"add-comp-cont max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"mt-10 sm:mt-0\">\n                    <div className=\" md:gap-6\">\n                        <div className=\"mt-5 md:mt-0 md:col-span-2\">\n                            <form onSubmit={(values) => addCompany(values)}>\n                                <div className=\"shadow overflow-hidden sm:rounded-md\">\n                                    <div className=\"px-4 py-5 bg-white sm:p-6\">\n                                        <div className=\"grid grid-cols-6 gap-6\">\n                                            \n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company name\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    id=\"companyName\"\n                                                    onChange={onInputChange}\n                                                    value={company.compName}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Tagline\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tagline\"\n                                                    id=\"tagline\"\n                                                    onChange={onInputChange}\n                                                    value={company.compTagline}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label className=\"block text-sm font-medium text-gray-700\">Company Logo</label>\n                                                <Logo file={company.logo}/>\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Assignments\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"assignments\"\n                                                    id=\"assignments\"\n                                                    value={company.assignments}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n                                            <div className=\"col-span-6 sm:col-span-6 lg:col-span-3\">\n                                                <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                                                    No. of Openings\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"openings\"\n                                                    id=\"openings\"\n                                                    value={company.openings}\n                                                    onChange={onInputChange}\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n                                            </div>\n\n\n                                          \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Location\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"location\"\n                                                    onChange={onLocTextChanged}\n                                                    id=\"location\"\n                                                    value={locText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (locSuggestions.length === 0) ? <></> : \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        locSuggestions.map((obj)=>{\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>locSuggestionSelected(obj.location)}\n                                                                                    >\n                                                                                    {obj.location}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n                                                {\n                                                    tempLocations.map((loc) =>{\n                                                        return(\n                                                            <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role__selected\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    LOCATIONS.map((loc) =>{\n                                                        return(\n                                                        <p key={loc.id}  id={loc.location} onClick={locAddClass} className=\"preference__modal__roles__role\">{loc.location}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Tags\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"tags\"\n                                                    id=\"tags\"\n                                                    onChange={onTagTextChanged}\n                                                    value={tagText}\n                                                    autoComplete=\"street-address\"\n                                                    className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\n                                                />\n\n                                                {\n                                                    (tagSuggestions.length === 0) ? <></> :  \n                                                    (\n                                                        <Menu>\n                                                            <Menu.Items\n                                                                static\n                                                                className=\"origin-top-right rounded-md shadow-lg bg-white \n                                                                ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                                                            >\n                                                                <div className=\"py-1\">\n                                                                    {\n                                                                        tagSuggestions.map((obj) => {\n                                                                            return(\n                                                                                <Menu.Item>\n                                                                                {({ active }) => (\n                                                                                    <a\n                                                                                    href=\"#\"\n                                                                                    className={classNames(\n                                                                                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                                                        'block px-4 py-2 text-sm'\n                                                                                    )}\n                                                                                    onClick={() =>tagSuggestionSelected(obj.tag)}\n                                                                                    >\n                                                                                    {obj.tag}\n                                                                                    </a>\n                                                                                )}\n                                                                                </Menu.Item>\n                                                                            );\n                                                                        })\n                                                                    }\n\n                                                                    \n                                                                </div>\n                                                            </Menu.Items>\n                                                        </Menu>\n                                                    )\n                                                }\n\n\n                                                {\n                                                    tempTags.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role__selected\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n\n                                                {\n                                                    TAGS.map((obj) =>{\n                                                        return(\n                                                        <p key={obj.id}  id={obj.tag} onClick={tagAddClass} className=\"preference__modal__roles__role\">{obj.tag}</p>\n                                                        );\n                                                    })\n                                                }\n                                                \n                                            </div>\n\n                                            \n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"company-website\" className=\"block text-sm font-medium text-gray-700\">\n                                                    Company Website\n                                                </label>\n                                                <div className=\"mt-1 flex rounded-md shadow-sm\">\n                                                    <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                                    http://\n                                                    </span>\n                                                    <input\n                                                    type=\"text\"\n                                                    name=\"company-website\"\n                                                    id=\"company-website\"\n                                                    onChange={onInputChange}\n                                                    value={company.website}\n                                                    className=\"focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                                                    placeholder=\"www.example.com\"\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-span-6\">\n                                                <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                                                About\n                                                </label>\n                                                <div className=\"mt-1\">\n                                                <textarea\n                                                    id=\"about\"\n                                                    name=\"about\"\n                                                    rows={10}\n                                                    onChange={onInputChange}\n                                                    value={company.about}\n                                                    className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md\"\n                                                    placeholder=\"you@example.com\"\n                                                    defaultValue={''}\n                                                />\n                                                </div>\n                                                <p className=\"mt-2 text-sm text-gray-500\">\n                                                Brief description for your profile. URLs are hyperlinked.\n                                                </p>\n                                            </div>\n\n                                    \n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        </>\n    )\n   \n}","import Header from './Header'\nimport { Link } from 'react-router-dom';\nimport { COMPANY } from '../shared/company';\n  \nexport default function Jobs() {\n\n    const openModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"block\"\n    }\n    \n\n    const closeModal = () =>{\n        const modal = document.getElementById(\"myModal\");\n        modal.style.display=\"none\"\n    }\n    \n    window.onclick = function(event) {\n        const modal = document.getElementById(\"myModal\");\n        if (event.target == modal) {\n          modal.style.display = \"none\";\n        }\n    }\n    return (\n        <>\n        <Header/>\n        <header className=\"bg-white shadow\">\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">Jobs</h1>\n\n            </div>\n        </header>\n        <main>\n            <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                <div className=\"add-comp\">\n                    <div>\n                        <button\n                            type=\"submit\"\n                            id=\"myBtn\"\n                            onClick={openModal}\n                            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                        >\n                            Add Job\n                        </button>\n                    </div>\n                </div>\n\n                {/* <div id=\"myModal\" className=\"modal\">\n                    <div className=\"modal-content\">\n                        <span onClick={closeModal} className=\"close\">&times;</span>\n                        <p>Some text in the Modal..</p>\n                    </div>\n                </div> */}\n\n                <div class=\"row\">\n\n                    {/* {\n                        COMPANY.map((comp)=>{\n                            return(\n                                <div class=\"column\" key={comp.id}>\n                                    <div class=\"content\">\n                                        <Link to={`/companies/${comp.compName}`}>\n                                            <a href=\"/\" >{comp.compName}</a>\n                                        </Link>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    } */}\n                    \n                </div>\n            </div>\n        </main>\n        </>\n    )\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport AddCompany from './AddCompany';\nimport Company from './Company';\nimport CompanyProfile from './CompanyProfile';\nimport Header from './Header';\nimport Jobs from './Jobs';\n\nfunction Main(props) {\n\n    const CompProfile = ({match}) => {\n        return(\n            <CompanyProfile compName={match.params.name}/>\n        );\n    };\n\n    return (\n        <>\n        <Switch>\n            <Route exact path=\"/companies\" component={Company}/>\n            <Route exact path=\"/addCompany\" component={AddCompany}/>\n            <Route exact path=\"/companies/:name\" component={CompProfile}/>\n            <Route exact path=\"/jobs\" component={Jobs}/>\n            <Route path=\"/\" component={Header}/>\n        </Switch>\n        </>\n    );\n}\n\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/Main';\n\n\nfunction App() {\n  return (\n    <>\n        <BrowserRouter>\n            <Main/>\n        </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}